function SpaceInvaders.new 0
push constant 19
call Memory.alloc 1
pop pointer 0
call Vehicle.new 0
pop this 0
push constant 0
pop this 1
push constant 0
pop this 2
push constant 10
pop this 4
push constant 0
pop this 5
push this 4
call Array.new 1
pop this 3
push constant 0
pop this 8
push constant 0
pop this 6
push constant 0
pop this 7
push constant 0
pop this 12
push constant 0
pop this 13
push constant 10
pop this 10
push constant 10
pop this 14
push constant 50
pop this 15
push constant 10
pop this 16
push constant 0
pop this 18
push pointer 0
call SpaceInvaders.makeInvaders 1
pop temp 0
push constant 3
pop this 9
push pointer 0
return
function SpaceInvaders.makeInvaders 4
push argument 0
pop pointer 0
push constant 25
pop local 0
push constant 50
pop local 1
push constant 0
pop local 2
label WHILE_EXP0
push local 2
push this 4
lt
not
if-goto WHILE_END0
push local 0
push local 1
push this 10
call Invader.new 3
pop local 3
push local 2
push this 3
add
push local 3
pop temp 0
pop pointer 1
push temp 0
pop that 0
push local 0
push constant 20
add
pop local 0
push local 2
push constant 1
add
pop local 2
goto WHILE_EXP0
label WHILE_END0
push constant 0
return
function SpaceInvaders.hitInvader 4
push argument 0
pop pointer 0
push constant 0
pop local 0
label WHILE_EXP0
push local 0
push this 4
lt
not
if-goto WHILE_END0
push local 0
push this 3
add
pop pointer 1
push that 0
pop local 3
push pointer 0
push local 3
push argument 1
call SpaceInvaders.shotHitInvader 3
pop local 1
push local 1
push constant 1
eq
if-goto IF_TRUE0
goto IF_FALSE0
label IF_TRUE0
push local 3
call Invader.disposeMem 1
pop temp 0
push this 5
push constant 1
add
pop this 5
push this 8
push constant 1
add
pop this 8
push constant 0
push constant 0
call Output.moveCursor 2
pop temp 0
push constant 7
call String.new 1
push constant 83
call String.appendChar 2
push constant 67
call String.appendChar 2
push constant 79
call String.appendChar 2
push constant 82
call String.appendChar 2
push constant 69
call String.appendChar 2
push constant 58
call String.appendChar 2
push constant 32
call String.appendChar 2
call Output.printString 1
pop temp 0
push this 8
call Output.printInt 1
pop temp 0
push constant 13
call String.new 1
push constant 32
call String.appendChar 2
push constant 32
call String.appendChar 2
push constant 32
call String.appendChar 2
push constant 32
call String.appendChar 2
push constant 32
call String.appendChar 2
push constant 32
call String.appendChar 2
push constant 76
call String.appendChar 2
push constant 69
call String.appendChar 2
push constant 86
call String.appendChar 2
push constant 69
call String.appendChar 2
push constant 76
call String.appendChar 2
push constant 58
call String.appendChar 2
push constant 32
call String.appendChar 2
call Output.printString 1
pop temp 0
push this 7
call Output.printInt 1
pop temp 0
push constant 13
call String.new 1
push constant 32
call String.appendChar 2
push constant 32
call String.appendChar 2
push constant 32
call String.appendChar 2
push constant 32
call String.appendChar 2
push constant 32
call String.appendChar 2
push constant 32
call String.appendChar 2
push constant 76
call String.appendChar 2
push constant 73
call String.appendChar 2
push constant 86
call String.appendChar 2
push constant 69
call String.appendChar 2
push constant 83
call String.appendChar 2
push constant 58
call String.appendChar 2
push constant 32
call String.appendChar 2
call Output.printString 1
pop temp 0
push this 9
call Output.printInt 1
pop temp 0
push this 5
push this 4
eq
if-goto IF_TRUE1
goto IF_FALSE1
label IF_TRUE1
push this 7
push constant 1
add
pop this 7
push this 3
call Memory.deAlloc 1
pop temp 0
push this 4
call Array.new 1
pop this 3
push pointer 0
call SpaceInvaders.makeInvaders 1
pop temp 0
push constant 0
pop this 5
label IF_FALSE1
push constant 1
return
label IF_FALSE0
push local 0
push constant 1
add
pop local 0
goto WHILE_EXP0
label WHILE_END0
push constant 0
return
function SpaceInvaders.shotHitInvader 4
push argument 0
pop pointer 0
push argument 2
call Shot.getY 1
pop local 2
push argument 1
call Invader.getY 1
pop local 0
push argument 2
call Shot.getX 1
pop local 3
push argument 1
call Invader.getX 1
pop local 1
push local 2
push local 0
lt
not
push local 2
push local 0
push this 10
add
gt
not
and
if-goto IF_TRUE0
goto IF_FALSE0
label IF_TRUE0
push local 3
push local 1
lt
not
push local 3
push local 1
push this 10
add
gt
not
and
if-goto IF_TRUE1
goto IF_FALSE1
label IF_TRUE1
push constant 1
return
label IF_FALSE1
label IF_FALSE0
push constant 0
return
function SpaceInvaders.moveInvaders 14
push argument 0
pop pointer 0
push constant 0
pop local 0
push constant 0
pop local 10
label WHILE_EXP0
push local 0
push this 4
lt
push local 10
not
and
not
if-goto WHILE_END0
push local 0
push this 3
add
pop pointer 1
push that 0
pop local 3
push local 3
call Invader.getIsDead 1
pop local 9
push local 9
push constant 0
eq
if-goto IF_TRUE0
goto IF_FALSE0
label IF_TRUE0
push local 3
pop local 2
push constant 1
pop local 10
label IF_FALSE0
push local 0
push constant 1
add
pop local 0
goto WHILE_EXP0
label WHILE_END0
push constant 9
pop local 0
push constant 0
pop local 10
label WHILE_EXP1
push local 0
push constant 1
neg
gt
push local 10
not
and
not
if-goto WHILE_END1
push local 0
push this 3
add
pop pointer 1
push that 0
pop local 3
push local 3
call Invader.getIsDead 1
pop local 9
push local 9
push constant 0
eq
if-goto IF_TRUE1
goto IF_FALSE1
label IF_TRUE1
push local 3
pop local 1
push constant 1
pop local 10
label IF_FALSE1
push local 0
push constant 1
sub
pop local 0
goto WHILE_EXP1
label WHILE_END1
push local 1
call Invader.getX 1
pop local 5
push local 2
call Invader.getX 1
pop local 6
push local 2
call Invader.getY 1
pop local 7
push local 2
call Invader.getOrientation 1
pop local 8
push constant 0
pop local 11
push constant 0
pop local 12
push constant 1
pop local 13
push local 6
push constant 20
lt
if-goto IF_TRUE2
goto IF_FALSE2
label IF_TRUE2
push constant 1
pop local 11
label IF_FALSE2
push local 5
push constant 490
gt
if-goto IF_TRUE3
goto IF_FALSE3
label IF_TRUE3
push constant 1
pop local 12
label IF_FALSE3
push local 7
push constant 200
gt
if-goto IF_TRUE4
goto IF_FALSE4
label IF_TRUE4
push constant 1
pop local 13
label IF_FALSE4
push local 8
push constant 1
eq
if-goto IF_TRUE5
goto IF_FALSE5
label IF_TRUE5
push local 12
push constant 0
eq
if-goto IF_TRUE6
goto IF_FALSE6
label IF_TRUE6
push constant 0
pop local 0
label WHILE_EXP2
push local 0
push this 4
lt
not
if-goto WHILE_END2
push local 0
push this 3
add
pop pointer 1
push that 0
pop local 4
push local 4
call Invader.moveX 1
pop temp 0
push local 0
push constant 1
add
pop local 0
goto WHILE_EXP2
label WHILE_END2
goto IF_END6
label IF_FALSE6
push local 13
push constant 1
eq
if-goto IF_TRUE7
goto IF_FALSE7
label IF_TRUE7
push constant 0
pop local 0
label WHILE_EXP3
push local 0
push this 4
lt
not
if-goto WHILE_END3
push local 0
push this 3
add
pop pointer 1
push that 0
pop local 4
push local 4
call Invader.flipX 1
pop temp 0
push local 4
call Invader.changeOrientation 1
pop temp 0
push local 0
push constant 1
add
pop local 0
goto WHILE_EXP3
label WHILE_END3
label IF_FALSE7
label IF_END6
label IF_FALSE5
push local 8
push constant 2
eq
if-goto IF_TRUE8
goto IF_FALSE8
label IF_TRUE8
push local 11
push constant 0
eq
if-goto IF_TRUE9
goto IF_FALSE9
label IF_TRUE9
push constant 0
pop local 0
label WHILE_EXP4
push local 0
push this 4
lt
not
if-goto WHILE_END4
push local 0
push this 3
add
pop pointer 1
push that 0
pop local 4
push local 4
call Invader.flipX 1
pop temp 0
push local 0
push constant 1
add
pop local 0
goto WHILE_EXP4
label WHILE_END4
goto IF_END9
label IF_FALSE9
push local 13
push constant 1
eq
if-goto IF_TRUE10
goto IF_FALSE10
label IF_TRUE10
push constant 0
pop local 0
label WHILE_EXP5
push local 0
push this 4
lt
not
if-goto WHILE_END5
push local 0
push this 3
add
pop pointer 1
push that 0
pop local 4
push local 4
call Invader.flipX 1
pop temp 0
push local 4
call Invader.changeOrientation 1
pop temp 0
push local 0
push constant 1
add
pop local 0
goto WHILE_EXP5
label WHILE_END5
label IF_FALSE10
label IF_END9
label IF_FALSE8
push constant 7
call Sys.wait 1
pop temp 0
push constant 0
return
